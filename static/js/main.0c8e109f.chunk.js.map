{"version":3,"sources":["logo.svg","components/header/Header.js","components/sudoku/Solution.js","components/sudoku/Block.js","components/sudoku/RowData.js","components/sudoku/Sudoku.js","redux/solver.js","redux/SudokuReducer.js","redux/reducers.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","style","headerStyle","background","color","textAlign","padding","connect","state","msg","SudokuReducer","dispatcher","solver","type","props","onClick","console","log","columnStyle","display","justifyContent","alignItems","sudoku","puzzle","updateValue","data","new_data","value","block_data","onChange","e","target","row","column","RowData","rowrStyle","column_data","map","id","flexDirection","alignContent","missingValues","x","i","includes","push","check_row","rowData","isValidPosition","y","xx","yy","matrix","col","j","check_prev_elements","index","solution","isSolution","missing_values","UIControls","action","test","title","row1","parseInt","rootReducer","combineReducers","store","createStore","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6IAAAA,EAAOC,QAAU,IAA0B,kC,kHCG5B,SAASC,IACpB,OACI,4BAAQC,MAAQC,GACZ,yDAIZ,IAAMA,EAAc,CAEhBC,WAAY,OACZC,MAAO,OACPC,UAAW,SACXC,QAAS,O,OCKb,IAaeC,eAbS,SAACC,GACrB,MAAO,CACHC,IAAID,EAAME,cAAcD,QAIL,SAAAE,GACvB,MAAO,CACHC,OAAQ,kBAAKD,EAAW,CAAEE,KAAK,eAKxBN,EA7Bf,SAAkBO,GAMd,OAEQ,yBAAKC,QANC,WACVC,QAAQC,IAAI,WACZH,EAAMF,WAKE,8CACA,4BAAKE,EAAML,SCS3B,IAcMS,EAAc,CAChBC,QAAQ,OACRb,QAAQ,MAERc,eAAe,SACfC,WAAW,SACXhB,UAAU,UAIGE,eAxBO,SAACC,GACrB,MAAO,CACHc,OAAQd,EAAME,cAAca,WAIT,SAAAZ,GACvB,MAAO,CACHa,YAAa,SAACC,GAAD,OAASd,EAAW,CAAEE,KAAK,cAAca,SAAUD,QAgBvDlB,EA3CjB,SAAeO,GAWX,OACI,yBAAKb,MAAOiB,GAER,2BAAOL,KAAK,SAASc,MAAOb,EAAMc,WAAYC,SAZnC,SAACC,GAChB,IAAIL,EAAM,CACNE,MAAMG,EAAEC,OAAOJ,MACfK,IAAIlB,EAAMkB,IACVC,OAAOnB,EAAMmB,QAEjBnB,EAAMU,YAAYC,UCTX,SAASS,EAAQpB,GAC5B,OACI,yBAAKb,MAAOkC,GAWJrB,EAAMsB,YAAYC,KAAI,SAACZ,EAAKQ,GACxB,OAAO,kBAAC,EAAD,CAAOK,GAAIL,EAAQD,IAAKlB,EAAMkB,IAAKC,OAAUA,EAAQL,WAAaH,QAQ7F,IAAMU,EAAY,CACdhB,QAAQ,OACRoB,cAAc,MACdpC,WAAY,OACZC,MAAO,QCcX,IAOeG,eAPS,SAACC,GACrB,MAAO,CAEHc,OAAQd,EAAME,cAAca,UAIrBhB,EAxBf,SAAgBO,GACZ,OAEQ,6BACI,kBAAC,EAAD,MACA,yBAAKb,MAAO,CAAGkB,QAAQ,OAAQoB,cAAc,SAAUlB,WAAW,SAASD,eAAe,SAAUoB,aAAa,WAE7G1B,EAAMQ,OAAOe,KAAI,SAACD,EAAYJ,GACE,OAAO,kBAACE,EAAD,CAASI,GAAMN,EAAKA,IAAKA,EAAKI,YAAcA,Y,cCvBjGK,EAAgB,SAAClB,GAEnB,IADA,IAAImB,EAAI,GACAC,EAAE,EAAEA,GAAG,EAAEA,IACRpB,EAAOqB,SAASD,IAChBD,EAAEG,KAAKF,GAIhB,OAAOD,GAGLI,EAAW,SAACC,EAAQpB,GACtB,IAAI,IAAIgB,EAAE,EAAEA,EAAE,EAAEA,IACZ,GAAGI,EAAQJ,KAAKhB,EACZ,OAAO,EAEf,OAAO,GAKLqB,EAAkB,SAACzB,EAAOI,EAAMe,EAAEO,GAEpC,GAAGH,EAAUvB,EAAOmB,GAAGf,GACnB,OAAO,EAEX,IAGIuB,EAAIC,EAHJC,EAAS7B,EAAO,GAAGc,KAAI,SAACgB,EAAKV,GAAN,OAAYpB,EAAOc,KAAI,SAAAL,GAAG,OAAIA,EAAIW,SAC7D,GAAGG,EAAUM,EAAOH,GAAGtB,GACnB,OAAO,EASPwB,EADDF,EAAG,EACG,EACAA,EAAI,EACL,EAEC,EACR,IAAI,IAAIN,EAXLO,EADDR,EAAG,EACG,EACDA,EAAI,EACJ,EAEA,EAOMC,EAAEO,EAAG,EAAEP,IACjB,IAAI,IAAIW,EAAEH,EAAGG,EAAEH,EAAG,EAAEG,IAChB,GAAG3B,IAAUJ,EAAOoB,GAAGW,GACnB,OAAO,EAInB,OAAO,GAGLC,EAAqB,SAACR,EAAQS,GAChC,IAAI,IAAIb,EAAE,EAAEA,EAAEa,EAAMb,IAChB,GAAkB,IAAfI,EAAQJ,GACP,OAAO,EAEf,OAAO,GAkDI/B,EAPA,SAACW,GACZ,QAzCa,SAAXkC,EAAYlC,EAAOS,GAGb,GA1EO,SAACT,GAChB,IAAI,IAAIoB,EAAE,EAAEA,EAAE,EAAEA,IACZ,IAAI,IAAIW,EAAE,EAAEA,EAAE,EAAEA,IACZ,GAAkB,IAAf/B,EAAOoB,GAAGW,GACT,OAAO,EAInB,OAAO,EAkEII,CAAWnC,GACV,OAAO,EAEX,IAAI,IAAIoB,EAAE,EAAEA,EAAE,EAAEA,IAAI,CAChB,IAAIgB,EAAiBlB,EAAclB,EAAOoB,IAC1C,GAAGA,EAAG,GAAKpB,EAAOoB,EAAE,GAAGC,SAAS,GAC7B,OAAO,EAEV,IAAI,IAAIU,EAAE,EAAEA,EAAE,EAAEA,IACR,GAAoB,IAAjB/B,EAAOoB,GAAGW,GACT,IAAI,IAAI3B,KAASgC,EAEb,GAAGX,EAAgBzB,EAAOoC,EAAehC,GAAOgB,EAAEW,GAAG,CACjD,GAAGC,EAAoBhC,EAAOoB,GAAGW,GAE7B,OAAO,EAIV,GADD/B,EAAOoB,GAAGW,GAAKK,EAAehC,GAC1B8B,EAASlC,EAAOS,EAAI,GACnB,OAAO,EAGRT,EAAOoB,GAAGW,GAAK,GAUnD,OAAO,EAKJG,CAASlC,EAAO,IC/GjBqC,EAAa,CAEfnD,IAAK,GACLc,OAAS,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACnB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAyDdb,EAvDO,WAAiC,IAAhCF,EAA+B,uDAAvBoD,EAAYC,EAAW,uCAElD,OAAQA,EAAOhD,MAEX,IAAK,SACA,GAAID,EAAOJ,EAAMe,QAKd,CACAP,QAAQC,IAAIT,EAAMe,QAClB,IAAIuC,EAAOtD,EAAMe,OAAOc,KAAI,SAACL,EAAIW,GAK7B,OAJcX,EAAIK,KAAI,SAAC0B,EAAMT,GACzB,OAAOS,QAMf,OADAvD,EAAMC,IAAM,uBACL,eAAID,EAAX,CAAiBe,OAAOuC,EAAKrD,IAAID,EAAMC,MAZvC,OADAD,EAAMC,IAAM,qBACL,eAAKD,EAAZ,CAAkBC,IAAID,EAAMC,MAgBpC,IAAK,cACD,IAAIuD,EAAOH,EAAOnC,SAASM,IACvBC,EAAS4B,EAAOnC,SAASO,OACzBN,EAAQkC,EAAOnC,SAASC,MAE5B,GAAGA,EAAQ,GAAIA,EAAQ,EAGnB,OAAO,eAAKnB,GAGZ,IAAIsD,EAAOtD,EAAMe,OAAOc,KAAI,SAACL,EAAIW,GAQ7B,OAPcX,EAAIK,KAAI,SAAC0B,EAAMT,GACzB,OAAGX,IAAMqB,GAAQV,IAAMrB,EACZgC,SAAStC,GACboC,QAMf,OAAO,eAAIvD,EAAX,CAAiBe,OAAOuC,IAGhC,QAEA,OAAOtD,IC7DF0D,EAAcC,YAAgB,CACvCzD,kBCQa0D,EAHDC,YAAYH,EAHR,ICcLI,MAXf,WACE,OACE,kBAAC,IAAD,CAAUF,MAASA,GACT,yBAAKG,UAAU,OACf,kBAACvE,EAAD,MACA,kBAAC,EAAD,SCFMwE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.0c8e109f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\n\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header style ={headerStyle}>\r\n            <h1>Welcome To Sudoku Solver</h1>\r\n        </header>\r\n    )\r\n}\r\nconst headerStyle = {\r\n\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '5px'\r\n  }\r\n\r\n  const LinkStyle ={\r\n    color: '#fff',\r\n    textDecoration: 'none',\r\n    \r\n}","\r\nimport React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Solution(props) {\r\n\r\n    const solver= () =>{\r\n        console.log(\"trigger\")\r\n        props.solver();\r\n    }\r\n    return (\r\n\r\n            <div onClick={solver}>\r\n                <h1>Click to Solve</h1>\r\n                <h5>{props.msg}</h5>\r\n\r\n            </div>\r\n  \r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        msg:state.SudokuReducer.msg\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatcher =>{\r\n    return {\r\n        solver: () =>dispatcher({ type:'solver'})\r\n        }\r\n  }\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Solution)","import React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction Block(props) {\r\n\r\n    const updateValue =(e) =>{\r\n        let data ={\r\n            value:e.target.value,\r\n            row:props.row,\r\n            column:props.column\r\n        }\r\n        props.updateValue(data);\r\n    }\r\n    \r\n    return (\r\n        <div style={columnStyle}>\r\n            {/* <p> {props.sudoku[props.row][props.column]}</p> */}\r\n            <input type=\"number\" value={props.block_data} onChange ={updateValue}  />\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sudoku: state.SudokuReducer.puzzle,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatcher =>{\r\n    return {\r\n        updateValue: (data) =>dispatcher({ type:'updateValue',new_data: data})\r\n        }\r\n  }\r\n\r\n\r\n\r\nconst columnStyle = {\r\n    display:'flex',\r\n    padding:'2px',\r\n\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    textAlign:'center'\r\n \r\n  }\r\n\r\n  export default connect(mapStateToProps, mapDispatchToProps)(Block)","import React from 'react'\r\nimport Block from './Block'\r\nconst puzzle = [5,3,0,0,7,0,0,0,0]\r\nexport default function RowData(props) {\r\n    return (\r\n        <div style={rowrStyle}>\r\n            \r\n          {/*  {\r\n                    Object.entries(props.column_data[1]).map((block_data,column) => {  \r\n                                                    return <Block id = {column} row={props.row} column = {column} \r\n                                                     block_data ={block_data} />\r\n                                              }\r\n                                    )  \r\n                    \r\n            } */}\r\n            {\r\n                props.column_data.map((data,column)=>{\r\n                    return <Block id={column} row={props.row} column = {column} block_data ={data}/>\r\n                 }\r\n                )\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\nconst rowrStyle = {\r\n    display:'flex',\r\n    flexDirection:'row',\r\n    background: '#333',\r\n    color: '#fff',\r\n  }","import React from 'react'\r\nimport Solution from './Solution'\r\nimport RowData from './RowData'\r\nimport { connect } from 'react-redux';\r\nconst sudoku_matrix = {\r\n    \"0\" :{ \"0\": 0,\"1\": 0,\"2\": 0,\"3\": 0,\"4\": 0,\"5\": 0,\"6\": 0,\"7\": 0, \"8\": 0 },\r\n    \"1\" :  { \"0\": 0,\"1\": 0,\"2\": 0,\"3\": 0,\"4\": 0,\"5\": 0,\"6\": 0,\"7\": 0, \"8\": 0 },\r\n    \"2\" : { \"0\": 0,\"1\": 0,\"2\": 0,\"3\": 0,\"4\": 0,\"5\": 0,\"6\": 0,\"7\": 0, \"8\": 0 },\r\n    \"3\" : { \"0\": 0,\"1\": 0,\"2\": 0,\"3\": 0,\"4\": 0,\"5\": 0,\"6\": 0,\"7\": 0, \"8\": 0 },\r\n    \"4\" : { \"0\": 0,\"1\": 0,\"2\": 0,\"3\": 0,\"4\": 0,\"5\": 0,\"6\": 0,\"7\": 0, \"8\": 0 },\r\n    \"5\" : { \"0\": 0,\"1\": 0,\"2\": 0,\"3\": 0,\"4\": 0,\"5\": 0,\"6\": 0,\"7\": 0, \"8\": 0 },\r\n    \"6\" : { \"0\": 0,\"1\": 0,\"2\": 0,\"3\": 0,\"4\": 0,\"5\": 0,\"6\": 0,\"7\": 0, \"8\": 0 },\r\n    \"7\" : { \"0\": 0,\"1\": 0,\"2\": 0,\"3\": 0,\"4\": 0,\"5\": 0,\"6\": 0,\"7\": 0, \"8\": 0 },\r\n    \"8\" : { \"0\": 0,\"1\": 0,\"2\": 0,\"3\": 0,\"4\": 0,\"5\": 0,\"6\": 0,\"7\": 0, \"8\": 0 },\r\n\r\n}  \r\nvar puzzle = [[5,3,0,0,7,0,0,0,0],\r\n              [6,0,0,1,9,5,0,0,0],\r\n              [0,9,8,0,0,0,0,6,0],\r\n              [8,0,0,0,6,0,0,0,3],\r\n              [4,0,0,8,0,3,0,0,1],\r\n              [7,0,0,0,2,0,0,0,6],\r\n              [0,6,0,0,0,0,2,8,0],\r\n              [0,0,0,4,1,9,0,0,5],\r\n              [0,0,0,0,8,0,0,7,9]]\r\n\r\nfunction Sudoku(props) {\r\n    return (\r\n\r\n            <div>\r\n                <Solution/>\r\n                <div style={{  display:'flex', flexDirection:'column', alignItems:'center',justifyContent:'center', alignContent:'center'}}>\r\n                {\r\n                    props.sudoku.map((column_data,row) => { \r\n                                                    return <RowData id = {row} row={row} column_data ={column_data}  />\r\n                                              }\r\n                                    )  \r\n                }\r\n                </div>\r\n            </div>\r\n  \r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        sudoku: state.SudokuReducer.puzzle,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sudoku)","const isSolution = (puzzle) =>{\r\n    for(let i=0;i<9;i++){\r\n        for(let j=0;j<9;j++){\r\n            if(puzzle[i][j]===0){\r\n                return false;\r\n            }\r\n        }\r\n    }    \r\n    return true;\r\n}\r\n\r\nconst missingValues = (puzzle) => {\r\n    var x = [];\r\n    for(let i=1;i<=9;i++){\r\n         if(!puzzle.includes(i)){\r\n             x.push(i)\r\n        }     \r\n    }\r\n       \r\n    return x\r\n}\r\n\r\nconst check_row =(rowData,value) =>{\r\n    for(let i=0;i<9;i++){\r\n        if(rowData[i]===value)\r\n            return true\r\n    }\r\n    return false\r\n}\r\n\r\n\r\n\r\nconst isValidPosition = (puzzle,value,x,y) =>{\r\n    //matrix = np.array(puzzle)\r\n    if(check_row(puzzle[x],value))\r\n        return false\r\n\r\n    var matrix = puzzle[0].map((col, i) => puzzle.map(row => row[i]));\r\n    if(check_row(matrix[y],value))\r\n        return false\r\n    let xx, yy;\r\n    if(x <3)\r\n        xx = 0\r\n    else if(x < 6)\r\n        xx =3\r\n    else\r\n        xx =6\r\n    if(y <3)\r\n        yy = 0\r\n    else if( y < 6)\r\n        yy =3\r\n    else\r\n        yy = 6\r\n     for(var i=xx;i<xx+3;i++){\r\n        for(var j=yy;j<yy+3;j++){\r\n            if(value === puzzle[i][j]){\r\n                return false\r\n            }\r\n        }\r\n    }\r\n    return true\r\n}\r\n\r\nconst check_prev_elements =(rowData,index) =>{\r\n    for(var i=0;i<index;i++){\r\n        if(rowData[i] === 0)\r\n            return true\r\n    }\r\n    return false\r\n}\r\n\r\nconst solution = (puzzle,row) => {\r\n            \r\n\r\n            if(isSolution(puzzle)){\r\n                return true;\r\n            }\r\n            for(var i=0;i<9;i++){\r\n                var missing_values = missingValues(puzzle[i]) ;    \r\n                if(i >0 && puzzle[i-1].includes(0)){\r\n                   return false;\r\n                }\r\n                for(var j=0;j<9;j++){\r\n                        if(puzzle[i][j] === 0){\r\n                            for(let value in missing_values){\r\n                                \r\n                                if(isValidPosition(puzzle,missing_values[value],i,j)){                  \r\n                                    if(check_prev_elements(puzzle[i],j)){  \r\n                                        \r\n                                        return false;\r\n                                        \r\n                                    }\r\n                                    puzzle[i][j] = missing_values[value]\r\n                                     if(solution(puzzle,row+1)){\r\n                                         return true;\r\n                                     }\r\n                                    else{\r\n                                        puzzle[i][j] = 0\r\n                                    }\r\n                              }\r\n                            }\r\n                       }\r\n                }\r\n                \r\n        }\r\n            \r\n    \r\n    return false\r\n\r\n}\r\n\r\nconst solver = (puzzle) =>{\r\n    if(solution(puzzle,0)){\r\n        return true\r\n    }\r\n    else\r\n        return false\r\n}\r\nexport default solver;","import solver  from './solver'\r\nconst UIControls = {\r\n\r\n    msg: '',\r\n    puzzle : [[5,3,0,0,7,0,0,0,0],\r\n            [6,0,0,1,9,5,0,0,0],\r\n            [0,9,8,0,0,0,0,6,0],\r\n            [8,0,0,0,6,0,0,0,3],\r\n            [4,0,0,8,0,3,0,0,1],\r\n            [7,0,0,0,2,0,0,0,6],\r\n            [0,6,0,0,0,0,2,8,0],\r\n            [0,0,0,4,1,9,0,0,5],\r\n            [0,0,0,0,8,0,0,7,9]]\r\n}\r\nconst SudokuReducer = (state = UIControls, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'solver':\r\n             if(!solver(state.puzzle)){\r\n                //console.log(\"fail\")\r\n                state.msg = \"No Solution Exists\";\r\n                return { ...state,msg:state.msg}\r\n            }  \r\n            else{\r\n                console.log(state.puzzle)\r\n                let test = state.puzzle.map((row,i) => {\r\n                    let new_row = row.map((title,j)=>{\r\n                        return title\r\n                    }\r\n                    );\r\n                    return new_row;\r\n                });\r\n                state.msg = \"Here is the solution\";\r\n                return {...state,puzzle:test,msg:state.msg}\r\n            }\r\n\r\n        \r\n        case 'updateValue':\r\n            let row1 = action.new_data.row;\r\n            let column = action.new_data.column;\r\n            let value = action.new_data.value ;\r\n            \r\n            if(value < 0 ||value > 9){\r\n                //console.log(action.new_data)\r\n                //console.log(\"fail\")\r\n                return { ...state}\r\n            }  \r\n            else{\r\n                let test = state.puzzle.map((row,i) => {\r\n                    let new_row = row.map((title,j)=>{\r\n                        if(i === row1 && j === column)\r\n                            return parseInt(value);\r\n                        return title\r\n                    }\r\n\r\n                    );\r\n                    return new_row;\r\n                });\r\n                return {...state,puzzle:test}\r\n            }\r\n\r\n        default:\r\n                \r\n        return state\r\n    }\r\n}\r\n\r\n\r\nexport default SudokuReducer;","import { combineReducers } from 'redux'\r\nimport SudokuReducer from './SudokuReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n    SudokuReducer\r\n})","import { createStore, compose } from 'redux'\r\n\r\nimport {  rootReducer } from './reducers'\r\n//import initialState from './initialState'\r\n\r\n\r\nconst initialState ={\r\n\r\n}\r\n  const store = createStore(rootReducer, initialState)\r\n\r\n  \r\n  export default store","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/header/Header'\nimport Sudoku from './components/sudoku/Sudoku'\n\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\"\n\nfunction App() {\n  return (\n    <Provider store = {store}>\n              <div className=\"App\">\n              <Header />\n              <Sudoku/> \n              </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}